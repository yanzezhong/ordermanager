// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.1

package types

type AddDeptReq struct {
	Code     string `json:"code,optional"`
	Name     string `json:"name"`
	ParentID int64  `json:"parentID,optional"`
	Status   int64  `json:"status,optional"`
}

type AddUserReq struct {
	Avatar   string   `json:"avatar,omitempty"`
	DeptID   int64    `json:"deptId,omitempty"`
	Email    string   `json:"email,omitempty"`
	Gender   int64    `json:"gender,omitempty"`
	ID       *int64   `json:"id,omitempty"`
	Mobile   string   `json:"mobile,omitempty"`
	Nickname string   `json:"nickname"`
	OpenID   string   `json:"openId,omitempty"`
	RoleIDS  []string `json:"roleIds"`
	Status   int64    `json:"status,omitempty"`
	Username string   `json:"username"`
	Password string   `json:"password"`
}

type AuthResp struct {
	Code string      `json:"code,omitempty"`
	Data interface{} `json:"data,omitempty"`
	Msg  string      `json:"msg,omitempty"`
}

type AuthenticationToken struct {
	AccessToken  string `json:"accessToken,omitempty"`
	ExpiresIn    int64  `json:"expiresIn,omitempty"`
	RefreshToken string `json:"refreshToken,omitempty"`
	TokenType    string `json:"tokenType,omitempty"`
}

type CAPTCHAInfo struct {
	CAPTCHABase64 *string `json:"captchaBase64,omitempty"`
	CAPTCHAKey    *string `json:"captchaKey,omitempty"`
}

type CaptchaReq struct {
}

type CaptchaResp struct {
	Code string       `json:"code,omitempty"`
	Data *CAPTCHAInfo `json:"data,omitempty"`
	Msg  string       `json:"msg,omitempty"`
}

type CommonResponse struct {
	Code string      `json:"code"`
	Data interface{} `json:"data,omitempty"`
	Msg  string      `json:"msg"`
}

type CreateMenuReq struct {
	Authorization string     `header:"Authorization"`
	Id            int64      `json:"id"`
	ParentId      int64      `json:"parentId"`
	Name          string     `json:"name"`
	RouteName     string     `json:"routeName"`
	RoutePath     string     `json:"routePath"`
	Component     string     `json:"component"`
	Perm          string     `json:"perm"`
	Visible       int32      `json:"visible"`
	Sort          int32      `json:"sort"`
	Icon          string     `json:"icon"`
	Redirect      string     `json:"redirect"`
	KeepAlive     int32      `json:"keepAlive"`
	AlwaysShow    int32      `json:"alwaysShow"`
	Params        []KeyValue `json:"params"`
}

type DataUserPageVO struct {
	List  []UserPageVO `json:"list,omitempty"`
	Total int64        `json:"total,omitempty"`
}

type DeleUserReq struct {
	IDS string `json:"ids"`
}

type DeleteDeptReq struct {
	IDS string `path:"ids"`
}

type DeleteMenuReq struct {
	Id            string `path:"id"`
	Authorization string `header:"Authorization"`
}

type DeptForm struct {
	Code     string `json:"code,omitempty"`
	ID       int64  `json:"id,omitempty"`
	Name     string `json:"name,omitempty"`
	ParentID int64  `json:"parentId"`
	Sort     int64  `json:"sort,omitempty"`
	Status   int64  `json:"status,omitempty"`
}

type DeptVO struct {
	Children   []DeptVO `json:"children,omitempty"`
	Code       *string  `json:"code,omitempty"`
	CreateTime string   `json:"createTime,omitempty"`
	ID         *int64   `json:"id,omitempty"`
	Name       *string  `json:"name,omitempty"`
	ParentID   *int64   `json:"parentId,omitempty"`
	Sort       *int64   `json:"sort,omitempty"`
	Status     *int64   `json:"status,omitempty"`
	UpdateTime string   `json:"updateTime,omitempty"`
}

type EditDeptReq struct {
	DeptID   int64  `path:"deptId"`
	Code     string `json:"code,optional"`
	ID       int64  `json:"id"`
	Name     string `json:"name"`
	ParentID int64  `json:"parentId"`
	Sort     int64  `json:"sort"`
	Status   int64  `json:"status"`
}

type GetMenuDetailReq struct {
	Id            int    `path:"id"`
	Authorization string `header:"Authorization"`
}

type GetMenuDetailResp struct {
	Code string                 `json:"code"`
	Data map[string]interface{} `json:"data"`
	Msg  string                 `json:"msg"`
}

type GetMenuFormDataReq struct {
	Id            int    `path:"id"`
	Authorization string `header:"Authorization"`
}

type GetMenuFormDataResp struct {
	Code string   `json:"code"`
	Data MenuForm `json:"data"`
	Msg  string   `json:"msg"`
}

type GetMenuOptionsReq struct {
	OnlyParent    bool   `query:"onlyParent"`
	Authorization string `header:"Authorization"`
}

type GetMenuOptionsResp struct {
	Code string       `json:"code"`
	Data []OptionLong `json:"data"`
	Msg  string       `json:"msg"`
}

type GetMenuRoutesReq struct {
	Authorization string `header:"Authorization"`
}

type GetMenuRoutesResp struct {
	Code string    `json:"code"`
	Data []RouteVO `json:"data"`
	Msg  string    `json:"msg"`
}

type InvoiceShopMonth struct {
	Year          int         `json:"year"`           // 年份
	Month         int         `json:"month"`          // 月份
	Customer      string      `json:"customer"`       // 客户名称，记录与单据相关的客户
	CustomerLevel string      `json:"customer_level"` // 客户级别，例如普通客户、VIP客户等
	Handler       []string    `json:"handler"`        // 经手人，记录处理单据的人员
	SalesRevenue  float64     `json:"sales_revenue"`  // 销售收入，记录销售的总收入
	SKUNum        int         `json:"sku_num"`        // SKU 数量
	SKU           []*SKUMonth `json:"sku"`            // SKU 列表
	DisSKU        []string    `json:"dis_sku"`        // 失效 SKU 列表
	NewSKU        []string    `json:"new_sku"`        // 新增 SKU 列表
}

type KeyValue struct {
	Key   string `json:"key,omitempty"`
	Value string `json:"value,omitempty"`
}

type ListDeptFromReq struct {
	DeptID int64 `path:"deptId,optional"`
}

type ListDeptFromResp struct {
	Code string    `json:"code,omitempty"`
	Data *DeptForm `json:"data,omitempty"`
	Msg  string    `json:"msg,omitempty"`
}

type ListDeptOptionsReq struct {
	Authorization string `header:"Authorization,optional"`
}

type ListDeptOptionsResp struct {
	Code string       `json:"code,omitempty"`
	Data []OptionLong `json:"data,omitempty"`
	Msg  string       `json:"msg,omitempty"`
}

type ListDeptReq struct {
	Keywords string `json:"keywords,optional"`
	Status   string `json:"status,optional"`
}

type ListDeptVOResp struct {
	Code string   `json:"code,omitempty"`
	Data []DeptVO `json:"data,omitempty"`
	Msg  string   `json:"msg,omitempty"`
}

type ListOrderRequest struct {
	State     int    `form:"state,optional"`
	ShopId    string `form:"shopId,optional"`
	ProductID string `form:"productId,optional"`
	Page      int    `form:"page"`
	Size      int    `form:"size,default=20"`
}

type ListOrderResp struct {
	Items []*Order `json:"items"`
	Count int64    `json:"count"`
}

type ListProductReq struct {
	ProductId string `json:"productId,optional"`
	Name      string `json:"name,optional"`     // 商品名称
	IsActive  *bool  `json:"isActive,optional"` // 是否生效
	NickName  string `json:"nickName,optional"` // 别名
	BarCode   string `json:"barCode,optional"`  //条码
}

type ListProductResp struct {
	Items []*Product `json:"items"`
	Count int64      `json:"count"`
}

type ListShopReq struct {
	Page                int     `form:"page"`
	Size                int     `form:"size"`
	ShopName            string  `form:"shopName,optional"`
	CustomerLevel       string  `form:"customerLevel,optional"`
	Address             string  `form:"address,optional"`
	PhoneNumber         string  `form:"phoneNumber,optional"`
	CustomerID          string  `form:"customerId,optional"`
	CustomerSource      string  `form:"customerSource,optional"`
	Category            string  `form:"category,optional"`
	SettlementMethod    string  `form:"settlementMethod,optional"`
	Remarks             string  `form:"remarks,optional"`
	MnemonicCode        string  `form:"mnemonicCode,optional"`
	CollectionPeriod    int     `form:"collectionPeriod,optional"`
	CreditLimit         int     `form:"creditLimit,optional"`
	ArrearsBalance      float64 `form:"arrearsBalance,optional"`
	PrepaymentBalance   float64 `form:"prepaymentBalance,optional"`
	LastTransactionTime int64   `form:"lastTransactionTime,optional"`
	Longitude           float64 `form:"longitude,optional"`
	Latitude            float64 `form:"latitude,optional"`
	AdCode              string  `form:"adCode,optional"`
	LocationTime        int64   `form:"locationTime,optional"`
}

type ListShopResp struct {
	Items []*Shop `json:"items"` // 商店列表
	Count int64   `json:"count"` // 总记录数
}

type LoginReq struct {
	Password string `form:"password"`
	Username string `form:"username"`
}

type LoginResp struct {
	Code string               `json:"code,omitempty"`
	Data *AuthenticationToken `json:"data,omitempty"`
	Msg  string               `json:"msg,omitempty"`
}

type LogoutReq struct {
	Authorization string `header:"authorization"`
}

type MenuForm struct {
	Id         int64      `json:"id"`
	ParentId   int64      `json:"parentId"`
	Name       string     `json:"name"`
	RouteName  string     `json:"routeName"`
	RoutePath  string     `json:"routePath"`
	Component  string     `json:"component"`
	Perm       string     `json:"perm"`
	Visible    int32      `json:"visible"`
	Sort       int32      `json:"sort"`
	Icon       string     `json:"icon"`
	Redirect   string     `json:"redirect"`
	KeepAlive  int32      `json:"keepAlive"`
	AlwaysShow int32      `json:"alwaysShow"`
	Params     []KeyValue `json:"params"`
}

type MenuListReq struct {
	Keywords      string `query:"keywords"`
	Status        string `query:"status"`
	Authorization string `header:"Authorization"`
}

type MenuListResp struct {
	Code string   `json:"code"`
	Data []MenuVO `json:"data"`
	Msg  string   `json:"msg"`
}

type MenuVO struct {
	Id        int64    `json:"id"`
	ParentId  int64    `json:"parentId"`
	Name      string   `json:"name"`
	RouteName string   `json:"routeName"`
	RoutePath string   `json:"routePath"`
	Component string   `json:"component"`
	Sort      int32    `json:"sort"`
	Visible   int32    `json:"visible"`
	Icon      string   `json:"icon"`
	Redirect  string   `json:"redirect"`
	Perm      string   `json:"perm"`
	Children  []MenuVO `json:"children"`
}

type Meta struct {
	Title      string            `json:"title"`
	Icon       string            `json:"icon"`
	Hidden     bool              `json:"hidden"`
	KeepAlive  bool              `json:"keepAlive"`
	AlwaysShow bool              `json:"alwaysShow"`
	Params     map[string]string `json:"params"`
}

type NormalResp struct {
	Code string      `json:"code,omitempty"`
	Data interface{} `json:"data,omitempty"`
	Msg  string      `json:"msg,omitempty"`
}

type OptionLong struct {
	Children []OptionLong `json:"children,omitempty"`
	Label    *string      `json:"label,omitempty"`
	Tag      *string      `json:"tag,omitempty"`
	Value    *int64       `json:"value,omitempty"`
}

type Order struct {
	OrderId     string       `json:"orderId"`
	Items       []*OrderItem `json:"items"`
	ShopId      string       `json:"shopId"`
	ShopName    string       `json:"shopName"`
	Address     string       `json:"address"`
	State       int          `json:"state"`
	Payment     int          `json:"payment"`
	DriverId    string       `json:"driverId,optional"`
	PurchaserId string       `json:"purchaserId"`
	TotalAmount float64      `json:"totalAmount"`
	UpdateTime  int64        `json:"updateTime"`
	CreateTime  int64        `json:"createTime"`
}

type OrderItem struct {
	ProductId   string  `json:"productId"`
	ProductName string  `json:"productName"`
	Price       float64 `json:"price"`
	Count       int     `json:"count"`
	TotalPrice  float64 `json:"totalPrice"`
}

type PostOrder struct {
	Items       []*OrderItem `json:"items,optional"`
	ShopId      string       `json:"shopId"`
	ShopName    string       `json:"shopName"`
	Address     string       `json:"address"`
	PurchaserId string       `json:"purchaserId"`
	Payment     int          `json:"payment"`
}

type PostProduct struct {
	ProductId     string `json:"productId,optional"`
	Name          string `json:"name,omitempty"`
	Price         *Price `json:"price,omitempty"`
	Specification int    `json:"specification,optional"`
	IsActive      *bool  `json:"isActive,optional"`
	Image         string `json:"image,omitempty"`
	NickName      string `json:"nickName,optional"`
	BarCode       string `json:"barCode,optional"`
}

type PostShop struct {
	ID                  string  `json:"id,omitempty"`
	ShopName            string  `json:"shop_name,omitempty"`
	CustomerLevel       string  `json:"customer_level,omitempty"`
	Address             string  `json:"address,omitempty"`
	PhoneNumber         string  `json:"phone_number,omitempty"`
	CustomerID          string  `json:"customer_id,omitempty"`
	CustomerSource      string  `json:"customer_source,omitempty"`
	Category            string  `json:"category,omitempty"`
	SettlementMethod    string  `json:"settlement_method,omitempty"`
	Remarks             string  `json:"remarks,omitempty"`
	MnemonicCode        string  `json:"mnemonic_code,omitempty"`
	CollectionPeriod    int     `json:"collection_period,omitempty"`
	CreditLimit         int     `json:"credit_limit,omitempty"`
	ArrearsBalance      float64 `json:"arrears_balance,omitempty"`
	PrepaymentBalance   float64 `json:"prepayment_balance,omitempty"`
	LastTransactionTime int64   `json:"last_transaction_time,omitempty"`
	Longitude           float64 `json:"longitude,omitempty"`
	Latitude            float64 `json:"latitude,omitempty"`
	AdCode              string  `json:"ad_code,omitempty"`
	LocationTime        int64   `json:"location_time,omitempty"`
}

type Price struct {
	Terminal  float64 `json:"terminal,omitempty"`
	WholeSale float64 `json:"wholesale,omitempty"`
	Cost      float64 `json:"cost,omitempty"`
	SRP       float64 `json:"srp,omitempty"`
	Warning   float64 `json:"warning,omitempty"`
}

type Product struct {
	ProductId     string `json:"productId"`
	Name          string `json:"name,omitempty"`
	Price         Price  `json:"price,omitempty"`
	Specification int    `json:"specification,omitempty"`
	IsActive      bool   `json:"isActive,omitempty"`
	Image         string `json:"image,omitempty"`
	NickName      string `json:"nickName,omitempty"`
	BarCode       string `json:"barCode,omitempty"`
}

type ProductSalesTrendItem struct {
	Date    string  `json:"date"`
	Sales   int     `json:"sales"`
	Revenue float64 `json:"revenue"`
}

type ProductSalesTrendReq struct {
	ProductID string `form:"productId,optional"`
	StartTime int64  `form:"startTime,optional"`
	EndTime   int64  `form:"endTime,optional"`
}

type ProductSalesTrendResp struct {
	Items []ProductSalesTrendItem `json:"items"`
}

type Products struct {
	ProductId   string  `json:"productId"`
	ProductName string  `json:"productName"`
	Price       float64 `json:"price"`
	Count       int     `json:"count"`
}

type PutOrderReq struct {
	OrderId string       `path:"orderId"`
	Items   []*OrderItem `json:"items,optional"`
	Address string       `json:"address,optional"`
	State   int          `json:"state,optional"`
	Payment int          `json:"payment,optional"`
}

type RefreshTokenReq struct {
	RefreshToken  string `form:"refreshToken"`
	Authorization string `header:"authorization"`
}

type Request struct {
	Name string `path:"name,options=you|me"`
}

type Response struct {
	Message string `json:"message"`
}

type RouteVO struct {
	Path      string    `json:"path"`
	Component string    `json:"component"`
	Redirect  string    `json:"redirect"`
	Name      string    `json:"name"`
	Meta      Meta      `json:"meta"`
	Children  []RouteVO `json:"children"`
}

type SKUMonth struct {
	Handler      string  `json:"handler"`
	SKU          string  `json:"sku"`
	SalesRevenue float64 `json:"sales_revenue"`
}

type Shop struct {
	ID                  string  `bson:"_id,omitempty" json:"id,omitempty"`
	ShopName            string  `bson:"shopName,omitempty" json:"shop_name,omitempty"`
	CustomerLevel       string  `bson:"customerLevel,omitempty" json:"customer_level,omitempty"`
	Address             string  `bson:"address,omitempty" json:"address,omitempty"`
	ShopNameMD5         string  `bson:"shopNameMD5,omitempty" json:"shop_name_md5,omitempty"`
	PhoneNumber         string  `json:"phone_number,omitempty"`
	CustomerID          string  `json:"customer_id,omitempty"`
	CustomerSource      string  `json:"customer_source,omitempty"`
	Category            string  `json:"category,omitempty"`
	SettlementMethod    string  `json:"settlement_method,omitempty"`
	Remarks             string  `json:"remarks,omitempty"`
	MnemonicCode        string  `json:"mnemonic_code,omitempty"`
	CollectionPeriod    int     `json:"collection_period,omitempty"`
	CreditLimit         int     `json:"credit_limit,omitempty"`
	ArrearsBalance      float64 `json:"arrears_balance,omitempty"`
	PrepaymentBalance   float64 `json:"prepayment_balance,omitempty"`
	LastTransactionTime int64   `json:"last_transaction_time,omitempty"`
	UpdateAt            int64   `json:"update_at,omitempty"`
	CreateAt            int64   `json:"create_at,omitempty"`
	Longitude           float64 `json:"longitude,omitempty"`
	Latitude            float64 `json:"latitude,omitempty"`
	AdCode              string  `json:"ad_code,omitempty"`
	LocationTime        int64   `json:"location_time,omitempty"`
}

type ShopSalesStatsItem struct {
	Year             int                 `json:"year"`
	Month            int                 `json:"month"`
	InvoiceShopMonth []*InvoiceShopMonth `json:"invoice_shop_month"`
}

type ShopSalesStatsReq struct {
	ShopID    string `form:"ShopId,optional"`
	ShopName  string `form:"ShopName,optional"`
	Handler   string `form:"handler,optional"`
	StartTime int64  `form:"startTime,optional"`
	EndTime   int64  `form:"endTime,optional"`
}

type ShopSalesStatsResp struct {
	Items []*ShopSalesStatsItem `json:"items"`
	Count int64                 `json:"count"`
}

type UpdateMenuReq struct {
	Id         int64      `json:"id,omitempty"`
	ParentId   int64      `json:"parentId,omitempty"`
	Name       string     `json:"name,omitempty"`
	RouteName  string     `json:"routeName,omitempty"`
	RoutePath  string     `json:"routePath,omitempty"`
	Component  string     `json:"component,omitempty"`
	Perm       string     `json:"perm,omitempty"`
	Visible    int32      `json:"visible,omitempty"`
	Sort       int32      `json:"sort,omitempty"`
	Icon       string     `json:"icon,omitempty"`
	Redirect   string     `json:"redirect,omitempty"`
	KeepAlive  int32      `json:"keepAlive,omitempty"`
	AlwaysShow int32      `json:"alwaysShow,omitempty"`
	Params     []KeyValue `json:"params,omitempty"`
}

type UpdateMenuVisibilityReq struct {
	MenuId        int    `path:"menuId"`
	Visible       int    `query:"visible"`
	Authorization string `header:"Authorization"`
}

type UpdateUserReq struct {
	UserID int64 `path:"userId"`
}

type UserForm struct {
	Avatar   string  `json:"avatar,omitempty"`
	DeptID   int64   `json:"deptId,omitempty"`
	Email    string  `json:"email,omitempty"`
	Gender   int64   `json:"gender,omitempty"`
	ID       int64   `json:"id,omitempty"`
	Mobile   string  `json:"mobile,omitempty"`
	Nickname string  `json:"nickname"`
	OpenID   string  `json:"openId,omitempty"`
	RoleIDS  []int64 `json:"roleIds"`
	Status   int64   `json:"status,omitempty"`
	Username string  `json:"username"`
}

type UserFormReq struct {
	UserID int64 `path:"userId"`
}

type UserFormResp struct {
	Code string    `json:"code,omitempty"`
	Data *UserForm `json:"data,omitempty"`
	Msg  string    `json:"msg,omitempty"`
}

type UserInfoVO struct {
	Avatar   string   `json:"avatar,omitempty"`
	Nickname string   `json:"nickname,omitempty"`
	Perms    []string `json:"perms,omitempty"`
	Roles    []string `json:"roles,omitempty"`
	UserID   int64    `json:"userId,omitempty"`
	Username string   `json:"username,omitempty"`
}

type UserListReq struct {
	CreateTime *string `json:"createTime,omitempty"`
	DeptID     *string `json:"deptId,omitempty"`
	Direction  *string `json:"direction,omitempty"`
	Field      *string `json:"field,omitempty"`
	Keywords   *string `json:"keywords,omitempty"`
	PageNum    string  `json:"pageNum"`
	PageSize   string  `json:"pageSize"`
	RoleIDS    *string `json:"roleIds,omitempty"`
	Status     *string `json:"status,omitempty"`
}

type UserListResp struct {
	Code string          `json:"code,omitempty"`
	Data *DataUserPageVO `json:"data,omitempty"`
	Msg  string          `json:"msg,omitempty"`
}

type UserPageVO struct {
	Avatar     string   `json:"avatar,omitempty"`
	CreateTime int64    `json:"createTime,omitempty"`
	DeptName   string   `json:"deptName,omitempty"`
	Email      string   `json:"email,omitempty"`
	Gender     int64    `json:"gender,omitempty"`
	ID         int64    `json:"id,omitempty"`
	Mobile     string   `json:"mobile,omitempty"`
	Nickname   string   `json:"nickname,omitempty"`
	RoleNames  []string `json:"roleNames,omitempty"`
	Status     int      `json:"status,omitempty"`
	Username   string   `json:"username,omitempty"`
}

type UserProfileReq struct {
	UserID int64 `json:"userId"`
}

type UserReq struct {
	Authorization string `header:"authorization"`
}

type UserResp struct {
	Code string      `json:"code,omitempty"`
	Data *UserInfoVO `json:"data,omitempty"`
	Msg  string      `json:"msg,omitempty"`
}
