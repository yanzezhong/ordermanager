// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.1

package types

type AddDeptReq struct {
	Code     string `json:"code,omitempty"`
	ID       int64  `json:"id,omitempty"`
	Name     string `json:"name,omitempty"`
	ParentID int64  `json:"parentId"`
	Sort     int64  `json:"sort,omitempty"`
	Status   int64  `json:"status,omitempty"`
}

type CommonResponse struct {
	Code string      `json:"code"`
	Data interface{} `json:"data,omitempty"`
	Msg  string      `json:"msg"`
}

type CreateMenuReq struct {
	Authorization string     `header:"Authorization"`
	Id            int64      `json:"id"`
	ParentId      int64      `json:"parentId"`
	Name          string     `json:"name"`
	RouteName     string     `json:"routeName"`
	RoutePath     string     `json:"routePath"`
	Component     string     `json:"component"`
	Perm          string     `json:"perm"`
	Visible       int32      `json:"visible"`
	Sort          int32      `json:"sort"`
	Icon          string     `json:"icon"`
	Redirect      string     `json:"redirect"`
	KeepAlive     int32      `json:"keepAlive"`
	AlwaysShow    int32      `json:"alwaysShow"`
	Params        []KeyValue `json:"params"`
}

type DeleteDeptReq struct {
	IDS string `path:"ids"`
}

type DeleteMenuReq struct {
	Id            string `path:"id"`
	Authorization string `header:"Authorization"`
}

type DeptForm struct {
	Code     string `json:"code,omitempty"`
	ID       int64  `json:"id,omitempty"`
	Name     string `json:"name,omitempty"`
	ParentID int64  `json:"parentId"`
	Sort     int64  `json:"sort,omitempty"`
	Status   int64  `json:"status,omitempty"`
}

type DeptVO struct {
	Children   []DeptVO `json:"children,omitempty"`
	Code       *string  `json:"code,omitempty"`
	CreateTime *string  `json:"createTime,omitempty"`
	ID         *int64   `json:"id,omitempty"`
	Name       *string  `json:"name,omitempty"`
	ParentID   *int64   `json:"parentId,omitempty"`
	Sort       *int64   `json:"sort,omitempty"`
	Status     *int64   `json:"status,omitempty"`
	UpdateTime *string  `json:"updateTime,omitempty"`
}

type EditDeptReq struct {
	DeptID   int64  `path:"deptId"`
	Code     string `json:"code"`
	ID       int64  `json:"id"`
	Name     string `json:"name"`
	ParentID int64  `json:"parentId"`
	Sort     int64  `json:"sort"`
	Status   int64  `json:"status"`
}

type GetMenuDetailReq struct {
	Id            int    `path:"id"`
	Authorization string `header:"Authorization"`
}

type GetMenuDetailResp struct {
	Code string                 `json:"code"`
	Data map[string]interface{} `json:"data"`
	Msg  string                 `json:"msg"`
}

type GetMenuFormDataReq struct {
	Id            int    `path:"id"`
	Authorization string `header:"Authorization"`
}

type GetMenuFormDataResp struct {
	Code string   `json:"code"`
	Data MenuForm `json:"data"`
	Msg  string   `json:"msg"`
}

type GetMenuOptionsReq struct {
	OnlyParent    bool   `query:"onlyParent"`
	Authorization string `header:"Authorization"`
}

type GetMenuOptionsResp struct {
	Code string       `json:"code"`
	Data []OptionLong `json:"data"`
	Msg  string       `json:"msg"`
}

type GetMenuRoutesReq struct {
	Authorization string `header:"Authorization"`
}

type GetMenuRoutesResp struct {
	Code string    `json:"code"`
	Data []RouteVO `json:"data"`
	Msg  string    `json:"msg"`
}

type KeyValue struct {
	Key   string `json:"key,omitempty"`
	Value string `json:"value,omitempty"`
}

type ListDeptFromReq struct {
	DeptID int64 `path:"deptId,omitempty"`
}

type ListDeptFromResp struct {
	Code string    `json:"code,omitempty"`
	Data *DeptForm `json:"data,omitempty"`
	Msg  string    `json:"msg,omitempty"`
}

type ListDeptOptionsReq struct {
	Authorization string `header:"Authorization,omitempty"`
}

type ListDeptOptionsResp struct {
	Code string       `json:"code,omitempty"`
	Data []OptionLong `json:"data,omitempty"`
	Msg  string       `json:"msg,omitempty"`
}

type ListDeptReq struct {
	Keywords string `json:"keywords,omitempty"`
	Status   string `json:"status"`
}

type ListDeptVOResp struct {
	Code string   `json:"code,omitempty"`
	Data []DeptVO `json:"data,omitempty"`
	Msg  string   `json:"msg,omitempty"`
}

type ListOrderRequest struct {
	State     int    `form:"state"`
	ShopId    string `form:"shopId"`
	ProductID string `form:"productId"`
	Page      int    `form:"page"`
	Size      int    `form:"size"`
}

type ListOrderResp struct {
	Items []*Order `json:"items"`
	Count int64    `json:"count"`
}

type ListProductReq struct {
	ProductId string `json:"productId,optional"`
	Name      string `json:"name,optional"`     // 商品名称
	IsActive  bool   `json:"isActive,optional"` // 是否生效
	NickName  string `json:"nickName,optional"` // 别名
	BarCode   string `json:"barCode,optional"`  //条码
}

type ListProductResp struct {
	Items []*Product `json:"items"`
	Count int        `json:"count"`
}

type MenuForm struct {
	Id         int64      `json:"id"`
	ParentId   int64      `json:"parentId"`
	Name       string     `json:"name"`
	RouteName  string     `json:"routeName"`
	RoutePath  string     `json:"routePath"`
	Component  string     `json:"component"`
	Perm       string     `json:"perm"`
	Visible    int32      `json:"visible"`
	Sort       int32      `json:"sort"`
	Icon       string     `json:"icon"`
	Redirect   string     `json:"redirect"`
	KeepAlive  int32      `json:"keepAlive"`
	AlwaysShow int32      `json:"alwaysShow"`
	Params     []KeyValue `json:"params"`
}

type MenuListReq struct {
	Keywords      string `query:"keywords"`
	Status        string `query:"status"`
	Authorization string `header:"Authorization"`
}

type MenuListResp struct {
	Code string   `json:"code"`
	Data []MenuVO `json:"data"`
	Msg  string   `json:"msg"`
}

type MenuVO struct {
	Id        int64    `json:"id"`
	ParentId  int64    `json:"parentId"`
	Name      string   `json:"name"`
	RouteName string   `json:"routeName"`
	RoutePath string   `json:"routePath"`
	Component string   `json:"component"`
	Sort      int32    `json:"sort"`
	Visible   int32    `json:"visible"`
	Icon      string   `json:"icon"`
	Redirect  string   `json:"redirect"`
	Perm      string   `json:"perm"`
	Children  []MenuVO `json:"children"`
}

type Meta struct {
	Title      string            `json:"title"`
	Icon       string            `json:"icon"`
	Hidden     bool              `json:"hidden"`
	KeepAlive  bool              `json:"keepAlive"`
	AlwaysShow bool              `json:"alwaysShow"`
	Params     map[string]string `json:"params"`
}

type OptionLong struct {
	Children []OptionLong `json:"children,omitempty"`
	Label    *string      `json:"label,omitempty"`
	Tag      *string      `json:"tag,omitempty"`
	Value    *int64       `json:"value,omitempty"`
}

type Order struct {
	OrderId     string      `json:"orderId"`
	Products    []*Products `json:"products"`
	ShopId      string      `json:"shopId"`
	ShopName    string      `json:"shopName"`
	Address     string      `json:"address"`
	State       int         `json:"state"`
	Payment     int         `json:"payment"`
	DriverId    string      `json:"driverId,optional"`
	PurchaserId string      `json:"purchaserId"`
	UpdateTime  int64       `json:"updateTime"`
	CreateTime  int64       `json:"createTime"`
}

type PostOrder struct {
	Products    []*Products `json:"products,optional"`
	ShopId      string      `json:"shopId"`
	ShopName    string      `json:"shopName"`
	Address     string      `json:"address"`
	PurchaserId string      `json:"purchaserId"`
	Payment     int         `json:"payment"`
}

type PostProduct struct {
	Name          string `json:"name,omitempty"`          // 商品名称
	Price         Price  `json:"price,omitempty"`         // 商品价格
	Specification int    `json:"specification,omitempty"` // 规格
	IsActive      bool   `json:"isActive,omitempty"`      // 是否生效
	Image         string `json:"image,omitempty"`         // 图片
	NickName      string `json:"nickName,omitempty"`      // 别名
	BarCode       string `json:"barCode,omitempty"`       //条码
}

type Price struct {
	Terminal  float64 `json:"terminal,omitempty"`  // 终端零售价
	WholeSale float64 `json:"wholesale,omitempty"` // 批发零售价
	Cost      float64 `json:"cost,omitempty"`      // 进价
	SRP       float64 `json:"srp,omitempty"`       // 建议零售价 Suggested Retail Price
	Warning   float64 `json:"warning,omitempty"`   // 报警价格
}

type Product struct {
	ProductId     string `json:"productId"`
	Name          string `json:"name,omitempty"` // 商品名称
	Price         Price  `json:"price,omitempty"`
	Specification int    `json:"specification,omitempty"` // 规格
	IsActive      bool   `json:"isActive,omitempty"`      // 是否生效
	Image         string `json:"image,omitempty"`         // 图片
	NickName      string `json:"nickName,omitempty"`      // 别名
	BarCode       string `json:"barCode,omitempty"`       //条码
}

type Products struct {
	ProductId   string  `json:"productId"`
	ProductName string  `json:"productName"`
	Price       float64 `json:"price"`
	Count       int     `json:"count"`
}

type PutOrderReq struct {
	ProductId string      `json:"productId"`
	Products  []*Products `json:"products,optional"`
	Address   string      `json:"address,optional"`
	State     int         `json:"state,optional"`
	Payment   int         `json:"payment,optional"`
}

type Request struct {
	Name string `path:"name,options=you|me"`
}

type Response struct {
	Message string `json:"message"`
}

type RouteVO struct {
	Path      string    `json:"path"`
	Component string    `json:"component"`
	Redirect  string    `json:"redirect"`
	Name      string    `json:"name"`
	Meta      Meta      `json:"meta"`
	Children  []RouteVO `json:"children"`
}

type UpdateMenuReq struct {
	Id         int64      `json:"id,omitempty"`
	ParentId   int64      `json:"parentId,omitempty"`
	Name       string     `json:"name,omitempty"`
	RouteName  string     `json:"routeName,omitempty"`
	RoutePath  string     `json:"routePath,omitempty"`
	Component  string     `json:"component,omitempty"`
	Perm       string     `json:"perm,omitempty"`
	Visible    int32      `json:"visible,omitempty"`
	Sort       int32      `json:"sort,omitempty"`
	Icon       string     `json:"icon,omitempty"`
	Redirect   string     `json:"redirect,omitempty"`
	KeepAlive  int32      `json:"keepAlive,omitempty"`
	AlwaysShow int32      `json:"alwaysShow,omitempty"`
	Params     []KeyValue `json:"params,omitempty"`
}

type UpdateMenuVisibilityReq struct {
	MenuId        int    `path:"menuId"`
	Visible       int    `query:"visible"`
	Authorization string `header:"Authorization"`
}
